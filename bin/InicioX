#! /bin/bash

########TODO: Documentar!

# Desde acá loguear a stderr
if [ "$1"x == -dx ]; then
	grupo=`pwd` # debug
else
	grupo="${HOME}/7508-20131-g5" # real
fi

LIB=${grupo}/LibX.sh
if [ ! -r ${LIB} ]; then
	echo "Biblioteca no encontrada, no se puede continuar: ${LIB}" >&2
	return 1;
fi
source ${LIB}

CONFDIR=${grupo}/conf
CONFFILE=${CONFDIR}/InstalX.conf
if [ ! -f ${CONFFILE} ]; then
	echo "Falta el archivo de configuración, no se puede continuar:" >&2
	echo ${CONFFILE} >&2
	return 1;
fi

BINDIR=
confdirs=('BINDIR' 'MAEDIR' 'ARRIDIR' 'ACEPDIR' 'RECHDIR' 'PROCDIR' 'REPODIR' 'LOGDIR')
confvars=('BINDIR' 'MAEDIR' 'ARRIDIR' 'ACEPDIR' 'RECHDIR' 'PROCDIR' 'REPODIR' 'LOGDIR' 'LOGEXT' 'LOGSIZE' 'DATASIZE')
badvars=()
for var in ${confvars[@]}; do
	== `grep "^${var}=" ${CONFFILE} | cut -d= -f1,2`
	== "if [ \${${var}}x == x ]; then badvars+=('${var}'); fi"
done
=!

if [ ${badvars}x == x ]; then
	baddirs=()
	for dir in ${confdirs[@]}; do
		== "if [ ! -d \${${dir}} -o ! -r \${${dir}} ]; then baddirs+=('${dir}'); fi"
	done
	=!
	if [ ${baddirs}x != x ]; then
		echo "Los siguientes directorios no están accesibles, no se puede continuar:" >&2
		echo "${baddirs[@]}" >&2
		return 1
	fi
else
	echo "Las siguientes variables no están definidas, no se puede continuar:" >&2
	echo "${badvars[@]}" >&2
	return 1
fi
PATH+=":${BINDIR}"
export LOGDIR
export LOGEXT

# Ahora sí podemos loguear a GlogX
GlogX InicioX 'Inicio de Ejecución'
GlogX InicioX "LOGDIR=${LOGDIR}"
GlogX InicioX "LOGEXT=${LOGEXT}"

#### Verificación de instalación
## Verificación de comandos
comandos=('InicioX' 'DetectaX' 'StartX' 'StopX' 'InterpreteX' 'MoverX' 'GlogX' 'VlogX') # 'ReporteX'
comandosFaltantes=()
comandosNoEjecutables=()
comandosOk=()

for c in ${comandos[@]}; do
	f="${BINDIR}/$c"
	if [ ! -f $f ]; then
		comandosFaltantes+=($c)
	elif [ ! -x $f ]; then
		comandosNoEjecutables+=($c)
	else
		comandosOK+=($c)
	fi
done

####TODO: Carpetas escribibles
## Reporte de situación
echo "Comandos registrados:" >&2
echo ${comandos[@]} >&2
if [ "${comandosNoEjecutables}x" != 'x' ]; then
	GlogX InicioX "Comandos no ejecutables: ${comandosNoEjecutables[@]}"
	echo "Comandos no ejecutables: ${comandosNoEjecutables[@]}" >&2
fi
# Comandos faltantes
if [ "${comandosFaltantes}x" != 'x' ]; then
	GlogX InicioX "Faltan los siguientes comandos, no se puede continuar: ${comandosFaltantes[@]}"
	echo "Faltan los siguientes comandos, no se puede continuar: ${comandosFaltantes[@]}" >&2
	return 1
	# Arreglo de permisos
elif [ "${comandosNoEjecutables}x" != 'x' ]; then
	echo "Desea hacerlos ejecutables? (s/N)" >&2
	read ans
	if [ "${ans}x" == sx -o "${ans}x" == Sx ]; then
		GlogX InicioX "Cambiando permisos..."
		echo Cambiando permisos... >&2
		bad=()
		for c in ${comandosNoEjecutables[@]}; do
			f="${BINDIR}/$c"
			if chmod gu+x $f 2>/dev/null; then
				GlogX InicioX "OK: $c"
				echo OK: $c >&2
			else
				GlogX InicioX "KO: $c"
				echo KO: $c >&2
				bad+=($c)
			fi
		done
		if [ "${bad}x" != "x" ]; then
			GlogX InicioX "No se pueden hacer ejecutables los siguientes comandos: ${bad[@]}"
			echo "No se pueden hacer ejecutables los siguientes comandos: ${bad[@]}" >&2
			return 3
		fi
	else
		return 2
	fi
fi
GlogX InicioX "Todos los comandos OK"
echo "Todos los comandos OK" >&2
####TODO: Verificar archivos maestros
# Existan legibles

####TODO: Verificar tablas de configuración
# Existan legibles

####TODO: Fallar si el entorno está inicializado

#### Exporto variables de entorno
#### TODO: Traer CANLOOP, TESPERA más lindo
echo "Cantidad de iteraciones para DetectaX?"
read CANLOOP
echo "Tiempo en segundos entre iteraciones?"
read TESPERA

GlogX InicioX "Exportando variables de entorno:"
echo "Exportando variables de entorno:" >&2
confvars+=('CANLOOP' 'TESPERA' 'PATH' 'CONFDIR' 'grupo')
for var in ${confvars[@]}; do
	== "export ${var}"
	== "echo ${var}=\${${var}}"
	== 'GlogX InicioX "'${var}'=${'${var}'}"'
done
=!

GlogX InicioX "Variables de entorno exportadas"
echo "Variables de entorno exportadas" >&2

#### Ejecución de DetectaX
echo "Desea efectuar la activación de DetectaX? (S/n)"
read ans
if [ "${ans}x" == sx -o "${ans}x" == Sx ]; then
	GlogX InicioX "Iniciando DetectaX"
	echo "Iniciando DetectaX"
	StartX DetectaX
else
	GlogX InicioX "DetectaX no iniciado"
	echo "DetectaX no iniciado"
fi

