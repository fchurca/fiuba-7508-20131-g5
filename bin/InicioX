#! /bin/bash

########TODO: Documentar!
####TODO: Crear una consola al final? Así podemos ejecutar en vez de sourcear InicioX
# O al menos ofrecer la posibilidad de entrar en una sesión interactiva

# Desde acá loguear a stderr
if [ -z ${grupo} ]; then
	if [ "$1"x == -dx ]; then
		grupo=`pwd` # debug
	else
		grupo="${HOME}/7508-20131-g5" # real
	fi
	preinicializado=false
else
	echo "ControlX ya está inicializado, sólo se verificará el entorno" >&2
	#TODO: -f para cargar configuración de todas formas?
	preinicializado=true
fi

LIB=${grupo}/LibX.sh
if [ ! -r ${LIB} ]; then
	echo "Biblioteca no encontrada, no se puede continuar: ${LIB}" >&2
	return 1
fi
source ${LIB}

CONFDIR=${grupo}/conf
CONFFILE=${CONFDIR}/InstalX.conf
if [ ! -f ${CONFFILE} ]; then
	echo "Falta el archivo de configuración, no se puede continuar:" >&2
	echo ${CONFFILE} >&2
	return 1
fi

confdirs=('BINDIR' 'MAEDIR' 'ARRIDIR' 'ACEPDIR' 'RECHDIR' 'PROCDIR' 'REPODIR' 'LOGDIR')
confvars=('BINDIR' 'MAEDIR' 'ARRIDIR' 'ACEPDIR' 'RECHDIR' 'PROCDIR' 'REPODIR' 'LOGDIR' 'LOGEXT' 'LOGSIZE' 'DATASIZE')
badvars=()
for var in ${confvars[@]}; do
	if ! ${preinicializado}; then
		eval `grep "^${var}=" ${CONFFILE} | cut -d= -f1,2`
	fi
	eval "if [ -z \${${var}} ]; then badvars+=('${var}'); fi"
done

if [ -z ${badvars} ]; then
	echo "Variables OK: ${confvars[@]}" >&2
	baddirs=()
	for dir in ${confdirs[@]}; do
		eval "if [ ! -d \${${dir}} -o ! -r \${${dir}} ]; then baddirs+=('${dir}'); fi"
	done
	if [ ! -z ${baddirs} ]; then
		echo "Los siguientes directorios no están accesibles, no se puede continuar:" >&2
		echo "${baddirs[@]}" >&2
		return 1
	fi
	echo "Directorios OK: ${confdirs[@]}" >&2
else
	echo "Las siguientes variables no están definidas, no se puede continuar:" >&2
	echo "${badvars[@]}" >&2
	return 1
fi
if ! ${preinicializado}; then
	PATH+=":${BINDIR}"
fi
export LOGDIR
export LOGEXT
function XGlogX {
GlogX InicioX "$1" "$2"
}

# Ahora sí podemos loguear a GlogX
XGlogX 'Inicio de Ejecución'
XGlogX "LOGDIR=${LOGDIR}"
XGlogX "LOGEXT=${LOGEXT}"

#### Verificación de instalación
## Verificación de comandos
comandos=('InicioX' 'DetectaX' 'StartX' 'StopX' 'InterpreteX' 'MoverX' 'GlogX' 'VlogX' 'ReporteX')
comandosFaltantes=()
comandosNoEjecutables=()
comandosOk=()

for c in ${comandos[@]}; do
	f="${BINDIR}/$c"
	if [ ! -f $f ]; then
		comandosFaltantes+=($c)
	elif [ ! -x $f ]; then
		comandosNoEjecutables+=($c)
	else
		comandosOK+=($c)
	fi
done

####TODO: Carpetas escribibles
## Reporte de situación
echo "Comandos registrados:" >&2
echo ${comandos[@]} >&2
if [ ! -z ${comandosNoEjecutables} ]; then
	XGlogX "Comandos no ejecutables: ${comandosNoEjecutables[@]}"
	echo "Comandos no ejecutables: ${comandosNoEjecutables[@]}" >&2
fi
# Comandos faltantes
if [ ! -z ${comandosFaltantes} ]; then
	XGlogX "Faltan los siguientes comandos, no se puede continuar: ${comandosFaltantes[@]}"
	echo "Faltan los siguientes comandos, no se puede continuar: ${comandosFaltantes[@]}" >&2
	return 1
	# Arreglo de permisos
elif [ ! -z ${comandosNoEjecutables} ]; then
	echo "Desea hacerlos ejecutables? (sí/no)" >&2
	getYesOrNoAnswer
	if [ ${answer} = si ]; then
		XGlogX "Cambiando permisos..."
		echo Cambiando permisos... >&2
		bad=()
		for c in ${comandosNoEjecutables[@]}; do
			f="${BINDIR}/$c"
			if chmod +x $f 2>/dev/null; then
				XGlogX "OK: $c"
				echo OK: $c >&2
			else
				XGlogX "KO: $c"
				echo KO: $c >&2
				bad+=($c)
			fi
		done
		if [ ! -z ${bad} ]; then
			XGlogX "No se pueden hacer ejecutables los siguientes comandos: ${bad[@]}"
			echo "No se pueden hacer ejecutables los siguientes comandos: ${bad[@]}" >&2
			return 3
		fi
	else
		return 2
	fi
fi
XGlogX "Todos los comandos OK"
echo "Todos los comandos OK" >&2

####TODO: Verificar archivos maestros
# Existan legibles

####TODO: Verificar tablas de configuración
# Existan legibles

#### Exporto variables de entorno
echo "Cantidad de iteraciones para DetectaX?"
getIntAnswer
CANLOOP=$?
echo "Tiempo en segundos entre iteraciones?"
getIntAnswer
TESPERA=$?

XGlogX "Exportando variables de entorno:"
echo "Exportando variables de entorno:" >&2
confvars+=('CANLOOP' 'TESPERA' 'PATH' 'CONFDIR' 'grupo')
for var in ${confvars[@]}; do
	eval "export ${var}"
	eval "echo ${var}=\${${var}}"
	eval 'XGlogX "'${var}'=${'${var}'}"'
done

XGlogX "Variables de entorno exportadas"
echo "Variables de entorno exportadas" >&2

#### Ejecución de DetectaX
echo "Desea efectuar la activación de DetectaX? (sí/no)"
getYesOrNoAnswer
if [ "${answer}" = si ]; then
	XGlogX "Iniciando DetectaX"
	echo "Iniciando DetectaX"
	StartX DetectaX
else
	XGlogX "DetectaX no iniciado"
	echo "DetectaX no iniciado"
fi

